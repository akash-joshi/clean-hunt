{"version":3,"sources":["App.js","index.js"],"names":["Link","url","text","style","target","rel","href","hot","module","myParam","URLSearchParams","window","location","search","get","initialSearch","useState","page","setPage","nbPages","setNbPages","results","setResults","searchText","setSearchText","loading","setLoading","console","log","useEffect","axios","headers","then","a","r","data","Promise","all","hits","map","hit","product_links","process","Set","error","handleSearch","maxWidth","marginLeft","marginRight","padding","color","display","alignItems","alt","height","src","fontWeight","fontSize","marginBottom","onSubmit","e","preventDefault","document","onChange","value","placeholder","defaultValue","type","result","index","marginTop","key","name","vote_count","length","onClick","textDecoration","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7baa4bc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { hot } from \"react-hot-loader\";\n\nimport \"./styles.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { Input, Button } from \"semantic-ui-react\";\n\nconst Link = ({ url, text, style }) => (\n  <a style={{ ...style }} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n    {text}\n  </a>\n);\n\nfunction App() {\n  const urlParams = new URLSearchParams(window.location.search);\n  const myParam = urlParams.get(\"q\");\n\n  const initialSearch = myParam ? myParam : \"\";\n\n  const [page, setPage] = useState(0);\n  const [nbPages, setNbPages] = useState(1);\n  const [results, setResults] = useState([]);\n  const [searchText, setSearchText] = useState(initialSearch);\n  const [loading, setLoading] = useState(false);\n\n  console.log(results);\n\n  useEffect(() => {\n    const handleSearch = (searchText) => {\n      setLoading(true);\n      setPage(0);\n      setNbPages(1);\n      setResults([]);\n\n      axios\n        .get(\n          `https://0h4smabbsg-dsn.algolia.net/1/indexes/Post_production?query=${searchText}&page=0&hitsPerPage=15`,\n          {\n            headers: {\n              \"X-Algolia-API-Key\": \"9670d2d619b9d07859448d7628eea5f3\",\n              \"X-Algolia-Application-Id\": \"0H4SMABBSG\",\n            },\n          }\n        )\n        .then(async (r) => {\n          setNbPages(r.data.nbPages);\n\n          await Promise.all(\n            r.data.hits.map(async (hit) => {\n              try {\n                console.log(hit.product_links[0].url);\n                await axios.get(\n                  `${process.env.REACT_APP_TEST_URL}?url=${hit.product_links[0].url}`\n                );\n                setResults((results) => {\n                  const nextResults = [...new Set([...results, hit])];\n                  return nextResults;\n                });\n              } catch (error) {\n                console.error(error);\n              }\n            })\n          );\n\n          console.log(\"fin\");\n          setLoading(false);\n        });\n    };\n\n    handleSearch(initialSearch);\n  }, [initialSearch]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n    setLoading(true);\n    axios\n      .get(\n        `https://0h4smabbsg-dsn.algolia.net/1/indexes/Post_production?query=${searchText}&page=${\n          page + 1\n        }`,\n        {\n          headers: {\n            \"X-Algolia-API-Key\": \"9670d2d619b9d07859448d7628eea5f3\",\n            \"X-Algolia-Application-Id\": \"0H4SMABBSG\",\n          },\n        }\n      )\n      .then(async (r) => {\n        await Promise.all(\n          r.data.hits.map(async (hit) => {\n            try {\n              console.log(hit.product_links[0].url);\n              await axios.get(\n                `${process.env.REACT_APP_TEST_URL}?url=${hit.product_links[0].url}`\n              );\n              setResults((results) => {\n                const nextResults = [...new Set([...results, hit])];\n                return nextResults;\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          })\n        );\n\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div\n      style={{\n        maxWidth: \"1000px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        padding: \"1em\",\n      }}\n    >\n      <a style={{ color: \"#f79862\" }} href=\"/\">\n        <h1 style={{ display: \"flex\", alignItems: \"center\" }}>\n          <img\n            alt=\"logo\"\n            style={{ height: \"2em\", marginRight: \"0.3em\" }}\n            src=\"/inline-logo.png\"\n          />{\" \"}\n          <span>CleanHunt</span>\n        </h1>\n      </a>\n\n      <br />\n      <details>\n        <summary\n          style={{ fontWeight: \"bold\", fontSize: \"1.5em\", marginBottom: \"1em\" }}\n        >\n          The Power of ProductHunt search without all the dead links.\n        </summary>\n        Have you ever searched something on ProductHunt and faced difficulty\n        while perusing, due to all the dead products? Introducing CleanHunt, a\n        product which uses the existing ProductHunt API and discards those\n        products from the results which don't have a live landing page. While\n        not a perfect method to check for dead products, all startups which are\n        no longer active don't pay their domain renewal fees, or don't host a\n        webpage behind it. This is what we try to look for.\n        <br />\n        <br />\n      </details>\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          document.location.href = `?q=${searchText}`;\n        }}\n      >\n        <Input\n          style={{ marginRight: \"0.5em\" }}\n          onChange={(e) => setSearchText(e.target.value)}\n          placeholder=\"Search Here...\"\n          defaultValue={searchText}\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {results.map((result, index) => (\n        <div style={{ marginTop: \"1em\", marginBottom: \"1em\" }} key={index}>\n          <div>\n            {index + 1}. {result.name}\n          </div>\n          <div>Points: {result.vote_count}</div>\n          <div>\n            <Link\n              url={`https://www.producthunt.com${result.url}`}\n              text={\"PH Link ⬈\"}\n            />\n          </div>\n          <div>\n            <Link url={result.product_links[0].url} text={\"Product Link ⬈\"} />\n          </div>\n        </div>\n      ))}\n\n      {page < nbPages && !loading && results.length > 0 && (\n        <>\n          <Button onClick={loadMore}>Load More</Button>\n          <br />\n          <br />\n        </>\n      )}\n      {results.length === 0 && !loading && (\n        <>\n          <br />\n          No Results.\n          <br />\n          <br />\n        </>\n      )}\n      {loading && (\n        <>\n          <br />\n          Loading...\n          <br />\n          <br />\n        </>\n      )}\n\n      <Link\n        style={{ textDecoration: \"underline\" }}\n        url={\"https://github.com/akash-joshi/clean-hunt\"}\n        text={\"An Open Source Production\"}\n      />\n    </div>\n  );\n}\n\nexport default hot(module)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}